import{r as y,_ as T,C as v,E as U,a as z,F as H,o as me,b as we,L as Ie,c as ye,d as P,e as be,v as Te,f as ve}from"./index.esm2017-ae7a34d8.js";var Ae="firebase",Se="9.15.0";y(Ae,Se,"app");const K="@firebase/installations",D="0.6.0";const W=1e4,Y=`w:${D}`,J="FIS_v2",ke="https://firebaseinstallations.googleapis.com/v1",Ce=60*60*1e3,Ee="installations",Re="Installations";const _e={["missing-app-config-values"]:'Missing App configuration value: "{$valueName}"',["not-registered"]:"Firebase Installation is not registered.",["installation-not-found"]:"Firebase Installation not found.",["request-failed"]:'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',["app-offline"]:"Could not process request. Application offline.",["delete-pending-registration"]:"Can't delete installation while there is a pending registration request."},m=new U(Ee,Re,_e);function X(e){return e instanceof H&&e.code.includes("request-failed")}function Q({projectId:e}){return`${ke}/projects/${e}/installations`}function Z(e){return{token:e.token,requestStatus:2,expiresIn:Fe(e.expiresIn),creationTime:Date.now()}}async function ee(e,t){const a=(await t.json()).error;return m.create("request-failed",{requestName:e,serverCode:a.code,serverMessage:a.message,serverStatus:a.status})}function te({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function De(e,{refreshToken:t}){const n=te(e);return n.append("Authorization",Oe(t)),n}async function ne(e){const t=await e();return t.status>=500&&t.status<600?e():t}function Fe(e){return Number(e.replace("s","000"))}function Oe(e){return`${J} ${e}`}async function Me({appConfig:e,heartbeatServiceProvider:t},{fid:n}){const a=Q(e),i=te(e),s=t.getImmediate({optional:!0});if(s){const l=await s.getHeartbeatsHeader();l&&i.append("x-firebase-client",l)}const r={fid:n,authVersion:J,appId:e.appId,sdkVersion:Y},o={method:"POST",headers:i,body:JSON.stringify(r)},c=await ne(()=>fetch(a,o));if(c.ok){const l=await c.json();return{fid:l.fid||n,registrationStatus:2,refreshToken:l.refreshToken,authToken:Z(l.authToken)}}else throw await ee("Create Installation",c)}function ae(e){return new Promise(t=>{setTimeout(t,e)})}function Pe(e){return btoa(String.fromCharCode(...e)).replace(/\+/g,"-").replace(/\//g,"_")}const $e=/^[cdef][\w-]{21}$/,_="";function Ne(){try{const e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),e[0]=112+e[0]%16;const n=je(e);return $e.test(n)?n:_}catch{return _}}function je(e){return Pe(e).substr(0,22)}function S(e){return`${e.appName}!${e.appId}`}const ie=new Map;function se(e,t){const n=S(e);re(n,t),xe(n,t)}function re(e,t){const n=ie.get(e);if(n)for(const a of n)a(t)}function xe(e,t){const n=qe();n&&n.postMessage({key:e,fid:t}),Le()}let g=null;function qe(){return!g&&"BroadcastChannel"in self&&(g=new BroadcastChannel("[Firebase] FID Change"),g.onmessage=e=>{re(e.data.key,e.data.fid)}),g}function Le(){ie.size===0&&g&&(g.close(),g=null)}const Be="firebase-installations-database",Ve=1,w="firebase-installations-store";let C=null;function F(){return C||(C=me(Be,Ve,{upgrade:(e,t)=>{switch(t){case 0:e.createObjectStore(w)}}})),C}async function A(e,t){const n=S(e),i=(await F()).transaction(w,"readwrite"),s=i.objectStore(w),r=await s.get(n);return await s.put(t,n),await i.done,(!r||r.fid!==t.fid)&&se(e,t.fid),t}async function oe(e){const t=S(e),a=(await F()).transaction(w,"readwrite");await a.objectStore(w).delete(t),await a.done}async function k(e,t){const n=S(e),i=(await F()).transaction(w,"readwrite"),s=i.objectStore(w),r=await s.get(n),o=t(r);return o===void 0?await s.delete(n):await s.put(o,n),await i.done,o&&(!r||r.fid!==o.fid)&&se(e,o.fid),o}async function O(e){let t;const n=await k(e.appConfig,a=>{const i=Ge(a),s=Ue(e,i);return t=s.registrationPromise,s.installationEntry});return n.fid===_?{installationEntry:await t}:{installationEntry:n,registrationPromise:t}}function Ge(e){const t=e||{fid:Ne(),registrationStatus:0};return ce(t)}function Ue(e,t){if(t.registrationStatus===0){if(!navigator.onLine){const i=Promise.reject(m.create("app-offline"));return{installationEntry:t,registrationPromise:i}}const n={fid:t.fid,registrationStatus:1,registrationTime:Date.now()},a=ze(e,n);return{installationEntry:n,registrationPromise:a}}else return t.registrationStatus===1?{installationEntry:t,registrationPromise:He(e)}:{installationEntry:t}}async function ze(e,t){try{const n=await Me(e,t);return A(e.appConfig,n)}catch(n){throw X(n)&&n.customData.serverCode===409?await oe(e.appConfig):await A(e.appConfig,{fid:t.fid,registrationStatus:0}),n}}async function He(e){let t=await $(e.appConfig);for(;t.registrationStatus===1;)await ae(100),t=await $(e.appConfig);if(t.registrationStatus===0){const{installationEntry:n,registrationPromise:a}=await O(e);return a||n}return t}function $(e){return k(e,t=>{if(!t)throw m.create("installation-not-found");return ce(t)})}function ce(e){return Ke(e)?{fid:e.fid,registrationStatus:0}:e}function Ke(e){return e.registrationStatus===1&&e.registrationTime+W<Date.now()}async function We({appConfig:e,heartbeatServiceProvider:t},n){const a=Ye(e,n),i=De(e,n),s=t.getImmediate({optional:!0});if(s){const l=await s.getHeartbeatsHeader();l&&i.append("x-firebase-client",l)}const r={installation:{sdkVersion:Y,appId:e.appId}},o={method:"POST",headers:i,body:JSON.stringify(r)},c=await ne(()=>fetch(a,o));if(c.ok){const l=await c.json();return Z(l)}else throw await ee("Generate Auth Token",c)}function Ye(e,{fid:t}){return`${Q(e)}/${t}/authTokens:generate`}async function M(e,t=!1){let n;const a=await k(e.appConfig,s=>{if(!le(s))throw m.create("not-registered");const r=s.authToken;if(!t&&Qe(r))return s;if(r.requestStatus===1)return n=Je(e,t),s;{if(!navigator.onLine)throw m.create("app-offline");const o=et(s);return n=Xe(e,o),o}});return n?await n:a.authToken}async function Je(e,t){let n=await N(e.appConfig);for(;n.authToken.requestStatus===1;)await ae(100),n=await N(e.appConfig);const a=n.authToken;return a.requestStatus===0?M(e,t):a}function N(e){return k(e,t=>{if(!le(t))throw m.create("not-registered");const n=t.authToken;return tt(n)?Object.assign(Object.assign({},t),{authToken:{requestStatus:0}}):t})}async function Xe(e,t){try{const n=await We(e,t),a=Object.assign(Object.assign({},t),{authToken:n});return await A(e.appConfig,a),n}catch(n){if(X(n)&&(n.customData.serverCode===401||n.customData.serverCode===404))await oe(e.appConfig);else{const a=Object.assign(Object.assign({},t),{authToken:{requestStatus:0}});await A(e.appConfig,a)}throw n}}function le(e){return e!==void 0&&e.registrationStatus===2}function Qe(e){return e.requestStatus===2&&!Ze(e)}function Ze(e){const t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+Ce}function et(e){const t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}function tt(e){return e.requestStatus===1&&e.requestTime+W<Date.now()}async function nt(e){const t=e,{installationEntry:n,registrationPromise:a}=await O(t);return a?a.catch(console.error):M(t).catch(console.error),n.fid}async function at(e,t=!1){const n=e;return await it(n),(await M(n,t)).token}async function it(e){const{registrationPromise:t}=await O(e);t&&await t}function st(e){if(!e||!e.options)throw E("App Configuration");if(!e.name)throw E("App Name");const t=["projectId","apiKey","appId"];for(const n of t)if(!e.options[n])throw E(n);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}function E(e){return m.create("missing-app-config-values",{valueName:e})}const ue="installations",rt="installations-internal",ot=e=>{const t=e.getProvider("app").getImmediate(),n=st(t),a=z(t,"heartbeat");return{app:t,appConfig:n,heartbeatServiceProvider:a,_delete:()=>Promise.resolve()}},ct=e=>{const t=e.getProvider("app").getImmediate(),n=z(t,ue).getImmediate();return{getId:()=>nt(n),getToken:i=>at(n,i)}};function lt(){T(new v(ue,ot,"PUBLIC")),T(new v(rt,ct,"PRIVATE"))}lt();y(K,D);y(K,D,"esm2017");const j="analytics",ut="firebase_id",dt="origin",ft=60*1e3,pt="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",de="https://www.googletagmanager.com/gtag/js";const u=new Ie("@firebase/analytics");function fe(e){return Promise.all(e.map(t=>t.catch(n=>n)))}function ht(e,t){const n=document.createElement("script");n.src=`${de}?l=${e}&id=${t}`,n.async=!0,document.head.appendChild(n)}function gt(e){let t=[];return Array.isArray(window[e])?t=window[e]:window[e]=t,t}async function mt(e,t,n,a,i,s){const r=a[i];try{if(r)await t[r];else{const c=(await fe(n)).find(l=>l.measurementId===i);c&&await t[c.appId]}}catch(o){u.error(o)}e("config",i,s)}async function wt(e,t,n,a,i){try{let s=[];if(i&&i.send_to){let r=i.send_to;Array.isArray(r)||(r=[r]);const o=await fe(n);for(const c of r){const l=o.find(h=>h.measurementId===c),d=l&&t[l.appId];if(d)s.push(d);else{s=[];break}}}s.length===0&&(s=Object.values(t)),await Promise.all(s),e("event",a,i||{})}catch(s){u.error(s)}}function It(e,t,n,a){async function i(s,r,o){try{s==="event"?await wt(e,t,n,r,o):s==="config"?await mt(e,t,n,a,r,o):s==="consent"?e("consent","update",o):e("set",r)}catch(c){u.error(c)}}return i}function yt(e,t,n,a,i){let s=function(...r){window[a].push(arguments)};return window[i]&&typeof window[i]=="function"&&(s=window[i]),window[i]=It(s,e,t,n),{gtagCore:s,wrappedGtag:window[i]}}function bt(e){const t=window.document.getElementsByTagName("script");for(const n of Object.values(t))if(n.src&&n.src.includes(de)&&n.src.includes(e))return n;return null}const Tt={["already-exists"]:"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.",["already-initialized"]:"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.",["already-initialized-settings"]:"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",["interop-component-reg-failed"]:"Firebase Analytics Interop Component failed to instantiate: {$reason}",["invalid-analytics-context"]:"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",["indexeddb-unavailable"]:"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",["fetch-throttle"]:"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.",["config-fetch-failed"]:"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}",["no-api-key"]:'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',["no-app-id"]:'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.'},f=new U("analytics","Analytics",Tt);const vt=30,At=1e3;class St{constructor(t={},n=At){this.throttleMetadata=t,this.intervalMillis=n}getThrottleMetadata(t){return this.throttleMetadata[t]}setThrottleMetadata(t,n){this.throttleMetadata[t]=n}deleteThrottleMetadata(t){delete this.throttleMetadata[t]}}const pe=new St;function kt(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function Ct(e){var t;const{appId:n,apiKey:a}=e,i={method:"GET",headers:kt(a)},s=pt.replace("{app-id}",n),r=await fetch(s,i);if(r.status!==200&&r.status!==304){let o="";try{const c=await r.json();!((t=c.error)===null||t===void 0)&&t.message&&(o=c.error.message)}catch{}throw f.create("config-fetch-failed",{httpStatus:r.status,responseMessage:o})}return r.json()}async function Et(e,t=pe,n){const{appId:a,apiKey:i,measurementId:s}=e.options;if(!a)throw f.create("no-app-id");if(!i){if(s)return{measurementId:s,appId:a};throw f.create("no-api-key")}const r=t.getThrottleMetadata(a)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new Dt;return setTimeout(async()=>{o.abort()},n!==void 0?n:ft),he({appId:a,apiKey:i,measurementId:s},r,o,t)}async function he(e,{throttleEndTimeMillis:t,backoffCount:n},a,i=pe){var s;const{appId:r,measurementId:o}=e;try{await Rt(a,t)}catch(c){if(o)return u.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${c==null?void 0:c.message}]`),{appId:r,measurementId:o};throw c}try{const c=await Ct(e);return i.deleteThrottleMetadata(r),c}catch(c){const l=c;if(!_t(l)){if(i.deleteThrottleMetadata(r),o)return u.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${l==null?void 0:l.message}]`),{appId:r,measurementId:o};throw c}const d=Number((s=l==null?void 0:l.customData)===null||s===void 0?void 0:s.httpStatus)===503?P(n,i.intervalMillis,vt):P(n,i.intervalMillis),h={throttleEndTimeMillis:Date.now()+d,backoffCount:n+1};return i.setThrottleMetadata(r,h),u.debug(`Calling attemptFetch again in ${d} millis`),he(e,h,a,i)}}function Rt(e,t){return new Promise((n,a)=>{const i=Math.max(t-Date.now(),0),s=setTimeout(n,i);e.addEventListener(()=>{clearTimeout(s),a(f.create("fetch-throttle",{throttleEndTimeMillis:t}))})})}function _t(e){if(!(e instanceof H)||!e.customData)return!1;const t=Number(e.customData.httpStatus);return t===429||t===500||t===503||t===504}class Dt{constructor(){this.listeners=[]}addEventListener(t){this.listeners.push(t)}abort(){this.listeners.forEach(t=>t())}}async function Ft(e,t,n,a,i){if(i&&i.global){e("event",n,a);return}else{const s=await t,r=Object.assign(Object.assign({},a),{send_to:s});e("event",n,r)}}async function Ot(){if(be())try{await Te()}catch(e){return u.warn(f.create("indexeddb-unavailable",{errorInfo:e==null?void 0:e.toString()}).message),!1}else return u.warn(f.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;return!0}async function Mt(e,t,n,a,i,s,r){var o;const c=Et(e);c.then(p=>{n[p.measurementId]=p.appId,e.options.measurementId&&p.measurementId!==e.options.measurementId&&u.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${p.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)}).catch(p=>u.error(p)),t.push(c);const l=Ot().then(p=>{if(p)return a.getId()}),[d,h]=await Promise.all([c,l]);bt(s)||ht(s,d.measurementId),i("js",new Date);const b=(o=r==null?void 0:r.config)!==null&&o!==void 0?o:{};return b[dt]="firebase",b.update=!0,h!=null&&(b[ut]=h),i("config",d.measurementId,b),d.measurementId}class Pt{constructor(t){this.app=t}_delete(){return delete I[this.app.options.appId],Promise.resolve()}}let I={},x=[];const q={};let R="dataLayer",$t="gtag",L,ge,B=!1;function Nt(){const e=[];if(ye()&&e.push("This is a browser extension environment."),ve()||e.push("Cookies are not available."),e.length>0){const t=e.map((a,i)=>`(${i+1}) ${a}`).join(" "),n=f.create("invalid-analytics-context",{errorInfo:t});u.warn(n.message)}}function jt(e,t,n){Nt();const a=e.options.appId;if(!a)throw f.create("no-app-id");if(!e.options.apiKey)if(e.options.measurementId)u.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`);else throw f.create("no-api-key");if(I[a]!=null)throw f.create("already-exists",{id:a});if(!B){gt(R);const{wrappedGtag:s,gtagCore:r}=yt(I,x,q,R,$t);ge=s,L=r,B=!0}return I[a]=Mt(e,x,q,t,L,R,n),new Pt(e)}function xt(e,t,n,a){e=we(e),Ft(ge,I[e.app.options.appId],t,n,a).catch(i=>u.error(i))}const V="@firebase/analytics",G="0.9.0";function qt(){T(new v(j,(t,{options:n})=>{const a=t.getProvider("app").getImmediate(),i=t.getProvider("installations-internal").getImmediate();return jt(a,i,n)},"PUBLIC")),T(new v("analytics-internal",e,"PRIVATE")),y(V,G),y(V,G,"esm2017");function e(t){try{const n=t.getProvider(j).getImmediate();return{logEvent:(a,i,s)=>xt(n,a,i,s)}}catch(n){throw f.create("interop-component-reg-failed",{reason:n})}}}qt();
